@page "/WatchLater"
@inject DatabaseContext DatabaseContext

<PageTitle>Отложенные</PageTitle>

<SortingDropDownList @bind-SortType="@SortType" IncludeSortByRating="false"/>
<MovieGrid Movies="@SortedMovies"/>

@code {
    
    private SortType SortType { get; set; }

    protected override void OnParametersSet()
    {
        DatabaseContext.Movies
            .Include(x => x.Genres)
            .Include(x => x.Directors)
            .Include(x => x.Writers)
            .Include(x => x.Compositors)
            .Include(x => x.Actors)
            .Load();
    }

    private List<Movie> SortedMovies
    {
        get
        {
            var shelvedMovies = DatabaseContext.Movies.Where(movie => movie.WatchLater == true);

            return SortType switch
            {
                SortType.AdditionOrder            => shelvedMovies.OrderByDescending(movie => movie.PublishDate).ToList(),
                SortType.ReverseAdditionOrder     => shelvedMovies.OrderBy(movie => movie.PublishDate).ToList(),
                SortType.AlphabeticalOrder        => shelvedMovies.OrderBy(movie => movie.Name).ToList(),
                SortType.ReverseAlphabeticalOrder => shelvedMovies.OrderByDescending(movie => movie.Name).ToList(),
                _                                 => throw new ArgumentOutOfRangeException()
                };
        }
    }

}