@if (Value)
{
    <div class="flex cursor-pointer w-fit" @onclick="@Toggle">
        <svg xmlns="http://www.w3.org/2000/svg" height="34" width="34" viewBox="0 -960 960 960"  stroke-width="1.75" class="fill-neutral-800 dark:fill-neutral-200">
            <path d="m419-321 289-289-43-43-246 246-119-119-43 43 162 162ZM180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm0-600v600-600Z"/>
        </svg>
        <p class="text-[16px] font-bold text-neutral-600 dark:text-neutral-400 self-center ml-[5px]">@Label</p>
    </div>
}
else
{
    <div class="flex cursor-pointer w-fit" @onclick="@Toggle">
        <svg xmlns="http://www.w3.org/2000/svg" height="34" width="34" viewBox="0 -960 960 960"  stroke-width="1.75" class="fill-neutral-800 dark:fill-neutral-200">
            <path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Z"/>
        </svg>
        <p class="text-[16px] font-bold text-neutral-600 dark:text-neutral-400 self-center ml-[5px]">@Label</p>
    </div>
}

@code {
    [Parameter]
    public bool Value { get; set; }
    
    [Parameter]
    public string? Label { get; set; }
    
    [Parameter]
    public EventCallback<bool>? ValueChanged { get; set; }
    
    private async Task Toggle()
    {
        Value = !Value;
        await ValueChanged?.InvokeAsync(Value)!;
    }
}