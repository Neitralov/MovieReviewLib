@page "/Statistics"
@inject StatisticsService StatisticsService

<PageTitle>Статистика</PageTitle>

<div class="max-w-screen-lg w-full self-center flex flex-col gap-[20px]">

<DataWithLabelAndDetails
    Label="Количество просмотренных произведений"
    Text="@StatisticsService.GetNumberOfWatchedMovies()"
    SummaryLabel="Количества просмотренных произведений по типам"
    Details="@(new[] 
    {
        ("Из них фильмов",       StatisticsService.GetNumberOfWatchedFilms()),
        ("Из них сериалов",      StatisticsService.GetNumberOfWatchedSeries()),
        ("Из них шоу",           StatisticsService.GetNumberOfWatchedShows()),
        ("Из них мультфильмов",  StatisticsService.GetNumberOfWatchedCartoons()),
        ("Из них мультсериалов", StatisticsService.GetNumberOfWatchedCartoonSeries()),
        ("Из них аниме",         StatisticsService.GetNumberOfWatchedAnime())
    })"/>
             
<DataWithLabelAndDetails
     Label="Количество отложенных произведений"
     Text="@StatisticsService.GetNumberOfPostponedMovies()"
     SummaryLabel="Количество отложенных произведений по типам"
     Details="@(new[] 
     {
        ("Из них фильмов",       StatisticsService.GetNumberOfPostponedFilms()),
        ("Из них сериалов",      StatisticsService.GetNumberOfPostponedSeries()),
        ("Из них шоу",           StatisticsService.GetNumberOfPostponedShows()),
        ("Из них мультфильмов",  StatisticsService.GetNumberOfPostponedCartoons()),
        ("Из них мультсериалов", StatisticsService.GetNumberOfPostponedCartoonSeries()),
        ("Из них аниме",         StatisticsService.GetNumberOfPostponedAnime())
     })"/>
     
<div>
    <Top10MoviesByRaiting
        Label="Топ-10 фильмов по рейтингу"
        MovieTitleWithScoreDtos="@StatisticsService.GetTop10FilmsByRaiting()">
    </Top10MoviesByRaiting>

    <Top10MoviesByRaiting
        Label="Топ-10 сериалов по рейтингу"
        MovieTitleWithScoreDtos="@StatisticsService.GetTop10SeriesByRaiting()">
    </Top10MoviesByRaiting>
    
    <Top10MoviesByRaiting
        Label="Топ-10 шоу по рейтингу"
        MovieTitleWithScoreDtos="@StatisticsService.GetTop10ShowsByRaiting()">
    </Top10MoviesByRaiting>
    
    <Top10MoviesByRaiting
        Label="Топ-10 мультфильмов по рейтингу"
        MovieTitleWithScoreDtos="@StatisticsService.GetTop10CartoonsByRaiting()">
    </Top10MoviesByRaiting>
    
    <Top10MoviesByRaiting
        Label="Топ-10 мультсериалов по рейтингу"
        MovieTitleWithScoreDtos="@StatisticsService.GetTop10CartoonSeriesByRaiting()">
    </Top10MoviesByRaiting>
    
    <Top10MoviesByRaiting
        Label="Топ-10 аниме по рейтингу"
        MovieTitleWithScoreDtos="@StatisticsService.GetTop10AnimeByRaiting()">
    </Top10MoviesByRaiting>
</div> 

<Top10TagsByViews
    Label="Топ-10 тегов по количеству просмотренных произведений"
    TagWithViewCounterDtos="@StatisticsService.GetTop10TagsByViews()">
</Top10TagsByViews>

<DataWithLabelAndDetails
    Label="Самое современное просмотренное произведение"
    Text="@StatisticsService.GetNewestWatchedMovie()"
    SummaryLabel="Самые современные просмотренные произведения по типам"
    Details="@(new[]
    {
        ("Фильм",       StatisticsService.GetNewestWatchedFilm()),
        ("Сериал",      StatisticsService.GetNewestWatchedSeries()),
        ("Шоу",         StatisticsService.GetNewestWatchedShow()),
        ("Мультфильм",  StatisticsService.GetNewestWatchedCartoon()),
        ("Мультсериал", StatisticsService.GetNewestWatchedCartoonSeries()),
        ("Аниме",       StatisticsService.GetNewestWatchedAnime())
    })"/>

<DataWithLabelAndDetails
    Label="Самое старое просмотренное произведение"
    Text="@StatisticsService.GetOldestWatchedMovie()"
    SummaryLabel="Самые старые просмотренные произведения по типам"
    Details="@(new[]
    {
        ("Фильм",       StatisticsService.GetOldestWatchedFilm()),
        ("Сериал",      StatisticsService.GetOldestWatchedSeries()),
        ("Шоу",         StatisticsService.GetOldestWatchedShow()),
        ("Мультфильм",  StatisticsService.GetOldestWatchedCartoon()),
        ("Мультсериал", StatisticsService.GetOldestWatchedCartoonSeries()),
        ("Аниме",       StatisticsService.GetOldestWatchedAnime())
    })"/>
    
<DataWithLabelAndDetails
    Label="Суммарное количество часов просмотра"
    Text="@StatisticsService.GetTotalViewingHours()"
    SummaryLabel="Суммарного количества часов просмотра по типам произведений"
    Details="@(new[] 
    {
        ("Из них фильмов",       StatisticsService.GetTotalFilmViewingHours()),
        ("Из них сериалов",      StatisticsService.GetTotalSeriesViewingHours()),
        ("Из них шоу",           StatisticsService.GetTotalShowViewingHours()),
        ("Из них мультфильмов",  StatisticsService.GetTotalCartoonViewingHours()),
        ("Из них мультсериалов", StatisticsService.GetTotalCartoonSeriesViewingHours()),
        ("Из них аниме",         StatisticsService.GetTotalAnimeViewingHours())
    })"/>

<DataWithLabelAndDetails
    Label="Самое длинное просмотренное произведение"
    Text="@StatisticsService.GetLongestMovie()"
    SummaryLabel="Самые длинные просмотренные произведения по типам"
    Details="@(new[]
    {
        ("Фильм",       StatisticsService.GetLongestFilm()),
        ("Сериал",      StatisticsService.GetLongestSeries()),
        ("Шоу",         StatisticsService.GetLongestShow()),
        ("Мультфильм",  StatisticsService.GetLongestCartoon()),
        ("Мультсериал", StatisticsService.GetLongestCartoonSeries()),
        ("Аниме",       StatisticsService.GetLongestAnime())
    })"/>

<DataWithLabelAndDetails
    Label="Самое короткое просмотренное произведение"
    Text="@StatisticsService.GetShortestMovie()"
    SummaryLabel="Самые короткие просмотренные произведения по типам"
    Details="@(new[]
    {
        ("Фильм",       StatisticsService.GetShortestFilm()),
        ("Сериал",      StatisticsService.GetShortestSeries()),
        ("Шоу",         StatisticsService.GetShortestShow()),
        ("Мультфильм",  StatisticsService.GetShortestCartoon()),
        ("Мультсериал", StatisticsService.GetShortestCartoonSeries()),
        ("Аниме",       StatisticsService.GetShortestAnime())
    })"/>    

</div>